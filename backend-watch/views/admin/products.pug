extends layout

block content
  .container-fluid
    .row
      // Sidebar
      .col-md-2.sidebar.p-0
        .d-flex.flex-column.flex-shrink-0.p-3
          a.d-flex.align-items-center.mb-3.mb-md-0.me-md-auto.text-decoration-none(href="/admin/dashboard")
            span.fs-4.text-white Watch Store
          hr.text-white
          ul.nav.nav-pills.flex-column.mb-auto
            li.nav-item
              a.nav-link(href="/admin/dashboard", class=currentPage === 'dashboard' ? 'active' : '')
                i.fas.fa-tachometer-alt.me-2
                | Dashboard
            li.nav-item
              a.nav-link(href="/admin/products", class=currentPage === 'products' ? 'active' : '')
                i.fas.fa-box.me-2
                | Products
            li.nav-item
              a.nav-link(href="/admin/categories", class=currentPage === 'categories' ? 'active' : '')
                i.fas.fa-tags.me-2
                | Categories
            li.nav-item
              a.nav-link(href="/admin/orders", class=currentPage === 'orders' ? 'active' : '')
                i.fas.fa-shopping-cart.me-2
                | Orders
            li.nav-item
              a.nav-link(href="/admin/users", class=currentPage === 'users' ? 'active' : '')
                i.fas.fa-users.me-2
                | Users
            li.nav-item
              a.nav-link(href="/admin/banners", class=currentPage === 'banners' ? 'active' : '')
                i.fas.fa-images.me-2
                | Banners
          hr.text-white
          .dropdown
            a.d-flex.align-items-center.text-white.text-decoration-none.dropdown-toggle#dropdownUser1(href="#", data-bs-toggle="dropdown", aria-expanded="false")
              img.rounded-circle.me-2(src="https://via.placeholder.com/32", alt="Admin", width="32", height="32")
              strong= user.name
            ul.dropdown-menu.dropdown-menu-dark.text-small.shadow(aria-labelledby="dropdownUser1")
              li
                a.dropdown-item(href="/admin/profile") Profile
              li
                hr.dropdown-divider
              li
                a.dropdown-item(href="/admin/logout") Sign out

      // Main content
      .col-md-10.content
        .d-flex.justify-content-between.align-items-center.mb-4
          h2 Products
          button.btn.btn-primary(data-bs-toggle="modal", data-bs-target="#addProductModal")
            i.fas.fa-plus.me-2
            | Add Product
        
        if success
          .alert.alert-success= success
        
        if error
          .alert.alert-danger= error
        
        .card
          .card-body
            table.table.table-striped
              thead
                tr
                  th Image
                  th Name
                  th Price
                  th Stock
                  th Category
                  th Actions
              tbody
                if products && products.length > 0
                  each product in products
                    tr
                      td
                        if product.image_url
                          img(src=product.image_url, alt=product.name, width="50")
                        else
                          span No Image
                      td= product.name
                      td $#{parseFloat(product.price).toFixed(2)}
                      td= product.stock
                      td= product.category_name || 'Uncategorized'
                      td
                        button.btn.btn-sm.btn-info.me-2(data-bs-toggle="modal", data-bs-target=`#editProductModal${product.id}`)
                          i.fas.fa-edit
                        button.btn.btn-sm.btn-danger(data-bs-toggle="modal", data-bs-target=`#deleteProductModal${product.id}`)
                          i.fas.fa-trash
                else
                  tr
                    td(colspan="6") No products found
        
        // Add Product Modal
        #addProductModal.modal.fade(tabindex="-1")
          .modal-dialog
            .modal-content
              .modal-header
                h5.modal-title Add New Product
                button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Close")
              .modal-body
                form(action="/admin/products", method="POST", enctype="multipart/form-data")
                  .mb-3
                    label.form-label(for="name") Product Name
                    input.form-control#name(type="text", name="name", required)
                  .mb-3
                    label.form-label(for="price") Price
                    input.form-control#price(type="number", name="price", step="0.01", required)
                  .mb-3
                    label.form-label(for="stock") Stock
                    input.form-control#stock(type="number", name="stock", required)
                  .mb-3
                    label.form-label(for="brand") Brand
                    input.form-control#brand(type="text", name="brand")
                  .mb-3
                    label.form-label(for="category_id") Category
                    select.form-control#category_id(name="category_id")
                      option(value="") Select Category
                      if categories
                        each category in categories
                          option(value=category.id)= category.name
                  .mb-3
                    label.form-label(for="description") Description
                    textarea.form-control#description(name="description", rows="3")
                  .mb-3
                    label.form-label(for="image") Product Image
                    input.form-control#image(type="file", name="image")
                  .text-end
                    button.btn.btn-secondary.me-2(type="button", data-bs-dismiss="modal") Cancel
                    button.btn.btn-primary(type="submit") Add Product
        
        // Edit and Delete Modals would be generated for each product
        if products && products.length > 0
          each product in products
            // Edit Product Modal
            div(id=`editProductModal${product.id}`).modal.fade(tabindex="-1")
              .modal-dialog
                .modal-content
                  .modal-header
                    h5.modal-title Edit Product
                    button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Close")
                  .modal-body
                    form(action=`/admin/products/${product.id}` method="POST" enctype="multipart/form-data")
                      input(type="hidden" name="_method" value="PUT")
                      .mb-3
                        label.form-label(for=`name${product.id}`) Product Name
                        input.form-control(id=`name${product.id}` type="text" name="name" value=product.name required)
                      .mb-3
                        label.form-label(for=`price${product.id}`) Price
                        input.form-control(id=`price${product.id}` type="number" name="price" step="0.01" value=parseFloat(product.price) required)
                      .mb-3
                        label.form-label(for=`stock${product.id}`) Stock
                        input.form-control(id=`stock${product.id}` type="number" name="stock" value=product.stock required)
                      .mb-3
                        label.form-label(for=`brand${product.id}`) Brand
                        input.form-control(id=`brand${product.id}` type="text" name="brand" value=product.brand)
                      .mb-3
                        label.form-label(for=`category_id${product.id}`) Category
                        select.form-control(id=`category_id${product.id}` name="category_id")
                          option(value="") Select Category
                          if categories
                            each category in categories
                              option(value=category.id selected=category.id === product.category_id)= category.name
                      .mb-3
                        label.form-label(for=`description${product.id}`) Description
                        textarea.form-control(id=`description${product.id}` name="description" rows="3")= product.description
                      .mb-3
                        label.form-label(for=`image${product.id}`) Product Image
                        input.form-control(id=`image${product.id}` type="file" name="image")
                        if product.image_url
                          .mt-2
                            img(src=product.image_url alt=product.name width="100")
                            p.small.text-muted Current image will be kept if no new image is uploaded
                      .text-end
                        button.btn.btn-secondary.me-2(type="button" data-bs-dismiss="modal") Cancel
                        button.btn.btn-primary(type="submit") Update Product
            
            // Delete Product Modal
            div(id=`deleteProductModal${product.id}`).modal.fade(tabindex="-1")
              .modal-dialog
                .modal-content
                  .modal-header
                    h5.modal-title Delete Product
                    button.btn-close(type="button", data-bs-dismiss="modal", aria-label="Close")
                  .modal-body
                    p Are you sure you want to delete the product "#{product.name}"?
                    p.text-danger This action cannot be undone.
                  .modal-footer
                    button.btn.btn-secondary(type="button", data-bs-dismiss="modal") Cancel
                    form(action=`/admin/products/${product.id}`, method="POST")
                      input(type="hidden", name="_method", value="DELETE")
                      button.btn.btn-danger(type="submit") Delete